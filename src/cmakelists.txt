cmake_minimum_required(VERSION 3.20)

project(Solution 
	LANGUAGES CXX
	VERSION 1.0.0)

option(USE_CUDA "Use CUDA" ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(OpenMP REQUIRED)
find_package(spdlog REQUIRED)

file(GLOB cpu_source_files "${CMAKE_SOURCE_DIR}/*.cpp")
file(GLOB gpu_source_files "${CMAKE_SOURCE_DIR}/*.cu")

if(USE_CUDA)
    enable_language(CUDA)
	add_definitions(-DUSE_CUDA)
    find_package(CUDAToolkit REQUIRED)
	include_directories(${CUDAToolkit_INCLUDE_DIRS})
    
	add_executable(xMatrix ${cpu_source_files} ${gpu_source_files})
    set_target_properties(xMatrix PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
	target_link_libraries(xMatrix CUDA::cudart)
else(USE_CUDA)
    add_executable(xMatrix ${cpu_source_files})
endif()   


target_include_directories(xMatrix
INTERFACE
	${CMAKE_CURRENT_LIST_DIR}
)

target_compile_definitions(xMatrix
    PUBLIC 
	#PREDEFINE
)

target_link_libraries(
xMatrix 
#PRIVATE 
	spdlog::spdlog
	OpenMP::OpenMP_CXX
	)



#set(CMAKE_CUDA_ARCHITECTURES 61)